# -*- coding: utf-8 -*-
"""Pandas Tutorial - LAS3021 New.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rfylhVsNHwjsC3-ic_zE7WfQ3Yy1jVvg
"""

import pandas as pd
import numpy as np

score = pd.Series([10, 28, 19, 19, 4, 30])
score

scores = pd.Series([10, 28, 19, 19, 4, 30], index = ['Luke', 'Terence', 'Anne', 'Andrew', 'James', 'John'])
scores = scores.sort_values(ascending=True)
scores

scores[2]

scores[['Terence', 'John']]

scores.index

scores[scores > 10]

scores.sum()

scores.max()

np.max(scores)



"""Titanic Csv Analysis"""

titanic_df = pd.read_csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQWafxlCLi_AIJAedhmFtdk8bHVd9NqCy3-4kbIOjHIyNzDuIoUrSTRdpUDILNYrCO43U8nRKiX-BBi/pub?output=csv')
titanic_df.head(10)

titanic_df.info()

titanic_df.dtypes

titanic_df.describe()

titanic_df.Age.mean()

titanic_df.Age.dropna().hist(bins=10)

titanic_df[['Name', 'Sex', 'Age']][100:110]

titanic_df.sort_values(by='Name')[:5]

titanic_df[titanic_df.Fare > 15].head(15)

def title(fullname):
  lower_case = fullname.lower()
  if 'dr.' in lower_case:
    return 'Doctor'
  elif 'drs.' in lower_case:
    return 'Doctor'
  elif 'mr.' in lower_case:
    return 'Mister'
  elif 'ms.' in lower_case:
    return 'Mistress'
  elif 'mrs.' in lower_case:
    return 'Miss'
  else:
    return 'Dont know'

titanic_df[titanic_df.Name.apply(title) == 'Doctor'].head(5)

titanic_df.drop(columns='Siblings/Spouses Aboard').head(3)

titanic_df['Survived'].unique()

titanic_df.groupby('Pclass').Age.mean()

titanic_df['Title'] = titanic_df.Name.apply(title)
titanic_df.head(5)

